// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package easyinheritance.web;

import easyinheritance.domain.B;
import easyinheritance.domain.D;
import easyinheritance.domain.MyA;
import easyinheritance.domain.MyC;
import easyinheritance.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<B, String> ApplicationConversionServiceFactoryBean.getBToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<easyinheritance.domain.B, java.lang.String>() {
            public String convert(B b) {
                return new StringBuilder().append(b.getAttribute2()).append(' ').append(b.getMyattribute()).toString();
            }
        };
    }
    
    public Converter<Long, B> ApplicationConversionServiceFactoryBean.getIdToBConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, easyinheritance.domain.B>() {
            public easyinheritance.domain.B convert(java.lang.Long id) {
                return B.findB(id);
            }
        };
    }
    
    public Converter<String, B> ApplicationConversionServiceFactoryBean.getStringToBConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, easyinheritance.domain.B>() {
            public easyinheritance.domain.B convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), B.class);
            }
        };
    }
    
    public Converter<D, String> ApplicationConversionServiceFactoryBean.getDToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<easyinheritance.domain.D, java.lang.String>() {
            public String convert(D d) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, D> ApplicationConversionServiceFactoryBean.getIdToDConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, easyinheritance.domain.D>() {
            public easyinheritance.domain.D convert(java.lang.Long id) {
                return D.findD(id);
            }
        };
    }
    
    public Converter<String, D> ApplicationConversionServiceFactoryBean.getStringToDConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, easyinheritance.domain.D>() {
            public easyinheritance.domain.D convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), D.class);
            }
        };
    }
    
    public Converter<MyA, String> ApplicationConversionServiceFactoryBean.getMyAToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<easyinheritance.domain.MyA, java.lang.String>() {
            public String convert(MyA myA) {
                return new StringBuilder().append(myA.getAttribute2()).append(' ').append(myA.getMyattribute()).toString();
            }
        };
    }
    
    public Converter<Long, MyA> ApplicationConversionServiceFactoryBean.getIdToMyAConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, easyinheritance.domain.MyA>() {
            public easyinheritance.domain.MyA convert(java.lang.Long id) {
                return MyA.findMyA(id);
            }
        };
    }
    
    public Converter<String, MyA> ApplicationConversionServiceFactoryBean.getStringToMyAConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, easyinheritance.domain.MyA>() {
            public easyinheritance.domain.MyA convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MyA.class);
            }
        };
    }
    
    public Converter<MyC, String> ApplicationConversionServiceFactoryBean.getMyCToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<easyinheritance.domain.MyC, java.lang.String>() {
            public String convert(MyC myC) {
                return new StringBuilder().append(myC.getAttribute2()).append(' ').append(myC.getMyattribute()).toString();
            }
        };
    }
    
    public Converter<Long, MyC> ApplicationConversionServiceFactoryBean.getIdToMyCConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, easyinheritance.domain.MyC>() {
            public easyinheritance.domain.MyC convert(java.lang.Long id) {
                return MyC.findMyC(id);
            }
        };
    }
    
    public Converter<String, MyC> ApplicationConversionServiceFactoryBean.getStringToMyCConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, easyinheritance.domain.MyC>() {
            public easyinheritance.domain.MyC convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MyC.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBToStringConverter());
        registry.addConverter(getIdToBConverter());
        registry.addConverter(getStringToBConverter());
        registry.addConverter(getDToStringConverter());
        registry.addConverter(getIdToDConverter());
        registry.addConverter(getStringToDConverter());
        registry.addConverter(getMyAToStringConverter());
        registry.addConverter(getIdToMyAConverter());
        registry.addConverter(getStringToMyAConverter());
        registry.addConverter(getMyCToStringConverter());
        registry.addConverter(getIdToMyCConverter());
        registry.addConverter(getStringToMyCConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
