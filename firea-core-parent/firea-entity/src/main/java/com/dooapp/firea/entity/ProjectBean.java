package com.dooapp.firea.entity;

import org.jdom2.Attribute;
import org.jdom2.Element;

//Start of user code for imports
// TODO: import me!
//End of user code


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.dooapp.firea.wrapper.Project;
import com.dooapp.lib.common.entity.Bean;


/*
 * Class
 * <!-- Start of user code comment for Project Class
 * End of user code -->
 */
//Start of user code for queries
//End of user code

@javax.persistence.Entity
public class ProjectBean
//Start of user code bloc for inheritance

//End of user code
//Start of user code bloc for interfaces
 implements Bean
//End of user code
{
	//Start of user code for attributes
	// Other attributes
	//End of user code

	/**
	 * The logger
	 */
	private static final Logger logger = LoggerFactory.getLogger(ProjectBean.class);

	
	private String Status;
	@javax.persistence.Column(name = "CREATION_DATE")
	@javax.persistence.Temporal(javax.persistence.TemporalType.TIMESTAMP)
	private java.util.Date creationDate;
	
	private String description;
	
	@javax.persistence.ManyToOne(cascade = javax.persistence.CascadeType.ALL)
	private ContactBean firmCustomer;
	
	@javax.persistence.ManyToOne(cascade = javax.persistence.CascadeType.ALL)
	private ContactBean firmMaintenance;
	
	@javax.persistence.ManyToOne(cascade = javax.persistence.CascadeType.ALL)
	private ContactBean firmMoe;
	
	@javax.persistence.OneToOne(optional = false, cascade = javax.persistence.CascadeType.ALL)
	private GazConfigurationBean gazconfiguration;
	@javax.persistence.Id
	@javax.persistence.SequenceGenerator(name = "seq", initialValue = 1, allocationSize = 10)
	@javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.SEQUENCE, generator = "seq")
	@javax.persistence.Column(name = "ID")
	private long id;
	
	@javax.persistence.ManyToOne(cascade = javax.persistence.CascadeType.ALL)
	private PersistentImageBean image;
	
	private String kind;
	
	private String nameDo;
	
	private String reference;
	
	@javax.persistence.ManyToOne(cascade = javax.persistence.CascadeType.ALL)
	private RisqueBean risque;
	
	@javax.persistence.OneToMany(fetch = javax.persistence.FetchType.EAGER, mappedBy = "project", cascade = javax.persistence.CascadeType.ALL)
	private java.util.Set<SampleBean> sample;
	
	@javax.persistence.ManyToOne(cascade = javax.persistence.CascadeType.ALL)
	private ContactBean technician;
	
	@javax.persistence.OneToOne(optional = false, cascade = javax.persistence.CascadeType.ALL, mappedBy = "project")
	private TestedRoomBean testedroom;
	@javax.persistence.Column(name = "UPDATE_DATE")
	@javax.persistence.Temporal(javax.persistence.TemporalType.TIMESTAMP)
	private java.util.Date updateDate;
	@javax.persistence.Version
	@javax.persistence.Column(name = "VERSIONCOLUMN")
	private int version;

	@javax.persistence.Transient
	private Project wrapper;
    	
	/**
	 * The current UUID of this object.<br>
	 * It's generated by the JPA provider, so you do not have to do it yourself.<br>
	 * <br>
	 * 
	 * @see <a
	 *      href="http://openjpa.apache.org/builds/2.1.1/apache-openjpa-2.1.1/docs/jpa_overview_meta_field.html#jpa_overview_meta_gen">jpa
	 *      documentation</a>
	 * @see <a href="http://fr.wikipedia.org/wiki/UUID">wikipedia</a>
	 */
	@javax.persistence.Column(name = "UUID", columnDefinition = "CHAR(36)")
	protected String uuid;
	/*
	 * <!-- Start of user code comment for Project wrapper getter
	 * End of user code -->
	 */
	@javax.persistence.Transient
	@Override
	public Project getWrapper() {
		if (wrapper == null) {
			wrapper = new Project(this);
		}
		return wrapper;
	}
	
	@javax.persistence.Transient
	@Override
	public boolean isWrapped() { 
		return wrapper != null;
	}
	
	/*
	 * <!-- Start of user code comment for Project wrapper setter
	 * End of user code -->
	 */
	@javax.persistence.Transient
	public void setWrapper(Project wrapper) {
		if (this.wrapper != null && this.wrapper != wrapper) {
			throw new RuntimeException("A bean can only have one wrapper, use #getWrapper instead");
		}
		this.wrapper = wrapper;
	}

	/**
	 * Configure date and identifiant when persisting the object the first time
	 */
	@javax.persistence.PrePersist
	void initDates() {
		updateDate = new java.util.Date();
		creationDate = new java.util.Date();
		if (uuid == null) {
			uuid = java.util.UUID.randomUUID().toString();
		}
	}
	
	/**
	 * Configure the update date when updating the object
	 */
	@javax.persistence.PreUpdate
	void initUpdateDate() {
		updateDate = new java.util.Date();
	}
	

	/*
	 * <!-- Start of user code comment for Status getter
	 * End of user code -->
	 */
	public String getStatus(){
		return this.Status;
	}
	
	/*
	 * <!-- Start of user code comment for Status setter
	 * End of user code -->
	 */
	public void setStatus(String arg0){
		this.Status = arg0;
	}
	/*
	 * <!-- Start of user code comment for creationDate getter
	 * End of user code -->
	 */
	public java.util.Date getCreationDate(){
		return this.creationDate;
	}
	
	/*
	 * <!-- Start of user code comment for creationDate setter
	 * End of user code -->
	 */
	public void setCreationDate(java.util.Date arg0){
		this.creationDate = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for creationDate unsetter
	 * End of user code -->
	 */
	public void unsetCreationDate(java.util.Date arg0){
		this.creationDate = null;
	}
	/*
	 * <!-- Start of user code comment for description getter
	 * End of user code -->
	 */
	public String getDescription(){
		return this.description;
	}
	
	/*
	 * <!-- Start of user code comment for description setter
	 * End of user code -->
	 */
	public void setDescription(String arg0){
		this.description = arg0;
	}
	/*
	 * <!-- Start of user code comment for firmCustomer getter
	 * End of user code -->
	 */
	public ContactBean getFirmCustomer(){
		return this.firmCustomer;
	}
	
	/*
	 * <!-- Start of user code comment for firmCustomer setter
	 * End of user code -->
	 */
	public void setFirmCustomer(ContactBean arg0){
		this.firmCustomer = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for firmCustomer unsetter
	 * End of user code -->
	 */
	public void unsetFirmCustomer(){
			this.firmCustomer = null;
			
	} 
	/*
	 * <!-- Start of user code comment for firmMaintenance getter
	 * End of user code -->
	 */
	public ContactBean getFirmMaintenance(){
		return this.firmMaintenance;
	}
	
	/*
	 * <!-- Start of user code comment for firmMaintenance setter
	 * End of user code -->
	 */
	public void setFirmMaintenance(ContactBean arg0){
		this.firmMaintenance = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for firmMaintenance unsetter
	 * End of user code -->
	 */
	public void unsetFirmMaintenance(){
			this.firmMaintenance = null;
			
	} 
	/*
	 * <!-- Start of user code comment for firmMoe getter
	 * End of user code -->
	 */
	public ContactBean getFirmMoe(){
		return this.firmMoe;
	}
	
	/*
	 * <!-- Start of user code comment for firmMoe setter
	 * End of user code -->
	 */
	public void setFirmMoe(ContactBean arg0){
		this.firmMoe = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for firmMoe unsetter
	 * End of user code -->
	 */
	public void unsetFirmMoe(){
			this.firmMoe = null;
			
	} 
	/*
	 * <!-- Start of user code comment for gazconfiguration getter
	 * End of user code -->
	 */
	public GazConfigurationBean getGazconfiguration(){
		return this.gazconfiguration;
	}
	
	/*
	 * <!-- Start of user code comment for gazconfiguration setter
	 * End of user code -->
	 */
	public void setGazconfiguration(GazConfigurationBean arg0){
		this.gazconfiguration = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for gazconfiguration unsetter
	 * End of user code -->
	 */
	public void unsetGazconfiguration(){
			if (this.gazconfiguration == null) {
				return;
			}
			GazConfigurationBean oldgazconfiguration = this.gazconfiguration;
			this.gazconfiguration = null;
			oldgazconfiguration.unsetProject();
	} 
	/*
	 * <!-- Start of user code comment for id getter
	 * End of user code -->
	 */
	public long getId(){
		return this.id;
	}
	
	/*
	 * <!-- Start of user code comment for id setter
	 * End of user code -->
	 */
	public void setId(long arg0){
		this.id = arg0;
	}
	/*
	 * <!-- Start of user code comment for image getter
	 * End of user code -->
	 */
	public PersistentImageBean getImage(){
		return this.image;
	}
	
	/*
	 * <!-- Start of user code comment for image setter
	 * End of user code -->
	 */
	public void setImage(PersistentImageBean arg0){
		this.image = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for image unsetter
	 * End of user code -->
	 */
	public void unsetImage(){
			this.image = null;
			
	} 
	/*
	 * <!-- Start of user code comment for kind getter
	 * End of user code -->
	 */
	public String getKind(){
		return this.kind;
	}
	
	/*
	 * <!-- Start of user code comment for kind setter
	 * End of user code -->
	 */
	public void setKind(String arg0){
		this.kind = arg0;
	}
	/*
	 * <!-- Start of user code comment for nameDo getter
	 * End of user code -->
	 */
	public String getNameDo(){
		return this.nameDo;
	}
	
	/*
	 * <!-- Start of user code comment for nameDo setter
	 * End of user code -->
	 */
	public void setNameDo(String arg0){
		this.nameDo = arg0;
	}
	/*
	 * <!-- Start of user code comment for reference getter
	 * End of user code -->
	 */
	public String getReference(){
		return this.reference;
	}
	
	/*
	 * <!-- Start of user code comment for reference setter
	 * End of user code -->
	 */
	public void setReference(String arg0){
		this.reference = arg0;
	}
	/*
	 * <!-- Start of user code comment for risque getter
	 * End of user code -->
	 */
	public RisqueBean getRisque(){
		return this.risque;
	}
	
	/*
	 * <!-- Start of user code comment for risque setter
	 * End of user code -->
	 */
	public void setRisque(RisqueBean arg0){
		this.risque = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for risque unsetter
	 * End of user code -->
	 */
	public void unsetRisque(){
			this.risque = null;
			
	} 
	/*
	 * <!-- Start of user code comment for sample getter
	 * End of user code -->
	 */
	public java.util.List<SampleBean> getSample(){
			if(this.sample==null) {
				this.sample= new java.util.HashSet<SampleBean>();
			}
			return new java.util.ArrayList<SampleBean>(this.sample);
	}
	
	/*
	 * <!-- Start of user code comment for sample adder
	 * End of user code -->
	 */
	public void addSample(SampleBean newSample){
		if(this.sample==null) {
				this.sample= new java.util.HashSet<SampleBean>();
			}
				
			this.sample.add (newSample);
	} 
	/*
	 * <!-- Start of user code comment for technician getter
	 * End of user code -->
	 */
	public ContactBean getTechnician(){
		return this.technician;
	}
	
	/*
	 * <!-- Start of user code comment for technician setter
	 * End of user code -->
	 */
	public void setTechnician(ContactBean arg0){
		this.technician = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for technician unsetter
	 * End of user code -->
	 */
	public void unsetTechnician(){
			this.technician = null;
			
	} 
	/*
	 * <!-- Start of user code comment for testedroom getter
	 * End of user code -->
	 */
	public TestedRoomBean getTestedroom(){
		return this.testedroom;
	}
	
	/*
	 * <!-- Start of user code comment for testedroom setter
	 * End of user code -->
	 */
	public void setTestedroom(TestedRoomBean arg0){
		this.testedroom = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for testedroom unsetter
	 * End of user code -->
	 */
	public void unsetTestedroom(){
			if (this.testedroom == null) {
				return;
			}
			TestedRoomBean oldtestedroom = this.testedroom;
			this.testedroom = null;
			oldtestedroom.unsetProject();
	} 
	/*
	 * <!-- Start of user code comment for updateDate getter
	 * End of user code -->
	 */
	public java.util.Date getUpdateDate(){
		return this.updateDate;
	}
	
	/*
	 * <!-- Start of user code comment for updateDate setter
	 * End of user code -->
	 */
	public void setUpdateDate(java.util.Date arg0){
		this.updateDate = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for updateDate unsetter
	 * End of user code -->
	 */
	public void unsetUpdateDate(java.util.Date arg0){
		this.updateDate = null;
	}
	/*
	 * <!-- Start of user code comment for version getter
	 * End of user code -->
	 */
	public int getVersion(){
		return this.version;
	}
	
	/*
	 * <!-- Start of user code comment for version setter
	 * End of user code -->
	 */
	public void setVersion(int arg0){
		this.version = arg0;
	}
    

	public Element toXML(){
		Element xmlElement = new Element("Project");
		if (uuid != null)
			xmlElement.setAttribute(new Attribute("uuid", uuid));
		if (getReference() != null)
			xmlElement.setAttribute(new Attribute("reference", getReference()));
		if (getDescription() != null)
			xmlElement.setAttribute(new Attribute("description", getDescription()));
		if (getNameDo() != null)
			xmlElement.setAttribute(new Attribute("nameDo", getNameDo()));
		if (getStatus() != null)
			xmlElement.setAttribute(new Attribute("Status", getStatus()));
		if (getKind() != null)
			xmlElement.setAttribute(new Attribute("kind", getKind()));
		xmlElement.setAttribute(new Attribute("id", String.valueOf(getId())));
		if (getCreationDate() != null)
			xmlElement.setAttribute(new Attribute("creationDate", getCreationDate().toString()));
		if (getUpdateDate() != null)
			xmlElement.setAttribute(new Attribute("updateDate", getUpdateDate().toString()));
		xmlElement.setAttribute(new Attribute("version", String.valueOf(getVersion())));
		
		if (!getSample().isEmpty()) {
			Element sample = new Element("sample");
			for (SampleBean tmp : getSample())
				sample.addContent(new Element("Sample", String.valueOf(tmp.getId())));
			xmlElement.addContent(sample);
		}
		if (getFirmMaintenance() != null)
			xmlElement.setAttribute("firmMaintenance", String.valueOf(getFirmMaintenance().getId()));
		if (getImage() != null) {
			Element image = new Element("image");
			image.addContent(getImage().toXML());
			xmlElement.addContent(image);
		}if (getFirmCustomer() != null)
			xmlElement.setAttribute("firmCustomer", String.valueOf(getFirmCustomer().getId()));
		if (getGazconfiguration() != null) {
			Element gazconfiguration = new Element("gazconfiguration");
			gazconfiguration.addContent(getGazconfiguration().toXML());
			xmlElement.addContent(gazconfiguration);
		}if (getFirmMoe() != null)
			xmlElement.setAttribute("firmMoe", String.valueOf(getFirmMoe().getId()));
		if (getRisque() != null)
			xmlElement.setAttribute("risque", String.valueOf(getRisque().getId()));
		if (getTestedroom() != null) {
			Element testedroom = new Element("testedroom");
			testedroom.addContent(getTestedroom().toXML());
			xmlElement.addContent(testedroom);
		}if (getTechnician() != null)
			xmlElement.setAttribute("technician", String.valueOf(getTechnician().getId()));
		
		return xmlElement;
	}

	//Start of user code for methods
	// Other methods
	//End of user code

}
