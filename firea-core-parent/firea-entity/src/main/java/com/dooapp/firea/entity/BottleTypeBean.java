package com.dooapp.firea.entity;

import org.jdom2.Attribute;
import org.jdom2.Element;

//Start of user code for imports
// TODO: import me!
//End of user code


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.dooapp.firea.wrapper.BottleType;
import com.dooapp.lib.common.entity.Bean;


/*
 * Class
 * <!-- Start of user code comment for BottleType Class
 * End of user code -->
 */
//Start of user code for queries
//End of user code

@javax.persistence.Entity
public class BottleTypeBean
//Start of user code bloc for inheritance

//End of user code
//Start of user code bloc for interfaces
 implements Bean
//End of user code
{
	//Start of user code for attributes
	// Other attributes
	//End of user code

	/**
	 * The logger
	 */
	private static final Logger logger = LoggerFactory.getLogger(BottleTypeBean.class);

	
	@javax.persistence.OneToMany(fetch = javax.persistence.FetchType.EAGER, mappedBy = "bottletype", cascade = javax.persistence.CascadeType.ALL)
	private java.util.Set<BottleConfigurationBean> bottleconfiguration;
	@javax.persistence.Column(name = "CREATION_DATE")
	@javax.persistence.Temporal(javax.persistence.TemporalType.TIMESTAMP)
	private java.util.Date creationDate;
	@javax.persistence.Id
	@javax.persistence.SequenceGenerator(name = "seq", initialValue = 1, allocationSize = 10)
	@javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.SEQUENCE, generator = "seq")
	@javax.persistence.Column(name = "ID")
	private long id;
	
	@javax.persistence.Column(name = "NAMECOLUMN")
	private String name;
	@javax.persistence.Column(name = "UPDATE_DATE")
	@javax.persistence.Temporal(javax.persistence.TemporalType.TIMESTAMP)
	private java.util.Date updateDate;
	@javax.persistence.Version
	@javax.persistence.Column(name = "VERSIONCOLUMN")
	private int version;
	
	private double volume;
	
	private double weight;

	@javax.persistence.Transient
	private BottleType wrapper;
    	
	/**
	 * The current UUID of this object.<br>
	 * It's generated by the JPA provider, so you do not have to do it yourself.<br>
	 * <br>
	 * 
	 * @see <a
	 *      href="http://openjpa.apache.org/builds/2.1.1/apache-openjpa-2.1.1/docs/jpa_overview_meta_field.html#jpa_overview_meta_gen">jpa
	 *      documentation</a>
	 * @see <a href="http://fr.wikipedia.org/wiki/UUID">wikipedia</a>
	 */
	@javax.persistence.Column(name = "UUID", columnDefinition = "CHAR(36)")
	protected String uuid;
	/*
	 * <!-- Start of user code comment for BottleType wrapper getter
	 * End of user code -->
	 */
	@javax.persistence.Transient
	@Override
	public BottleType getWrapper() {
		if (wrapper == null) {
			wrapper = new BottleType(this);
		}
		return wrapper;
	}
	
	@javax.persistence.Transient
	@Override
	public boolean isWrapped() { 
		return wrapper != null;
	}
	
	/*
	 * <!-- Start of user code comment for BottleType wrapper setter
	 * End of user code -->
	 */
	@javax.persistence.Transient
	public void setWrapper(BottleType wrapper) {
		if (this.wrapper != null && this.wrapper != wrapper) {
			throw new RuntimeException("A bean can only have one wrapper, use #getWrapper instead");
		}
		this.wrapper = wrapper;
	}

	/**
	 * Configure date and identifiant when persisting the object the first time
	 */
	@javax.persistence.PrePersist
	void initDates() {
		updateDate = new java.util.Date();
		creationDate = new java.util.Date();
		if (uuid == null) {
			uuid = java.util.UUID.randomUUID().toString();
		}
	}
	
	/**
	 * Configure the update date when updating the object
	 */
	@javax.persistence.PreUpdate
	void initUpdateDate() {
		updateDate = new java.util.Date();
	}
	

	/*
	 * <!-- Start of user code comment for bottleconfiguration getter
	 * End of user code -->
	 */
	public java.util.List<BottleConfigurationBean> getBottleconfiguration(){
			if(this.bottleconfiguration==null) {
				this.bottleconfiguration= new java.util.HashSet<BottleConfigurationBean>();
			}
			return new java.util.ArrayList<BottleConfigurationBean>(this.bottleconfiguration);
	}
	
	/*
	 * <!-- Start of user code comment for bottleconfiguration adder
	 * End of user code -->
	 */
	public void addBottleconfiguration(BottleConfigurationBean newBottleconfiguration){
		if(this.bottleconfiguration==null) {
				this.bottleconfiguration= new java.util.HashSet<BottleConfigurationBean>();
			}
				
			this.bottleconfiguration.add (newBottleconfiguration);
	} 
	/*
	 * <!-- Start of user code comment for creationDate getter
	 * End of user code -->
	 */
	public java.util.Date getCreationDate(){
		return this.creationDate;
	}
	
	/*
	 * <!-- Start of user code comment for creationDate setter
	 * End of user code -->
	 */
	public void setCreationDate(java.util.Date arg0){
		this.creationDate = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for creationDate unsetter
	 * End of user code -->
	 */
	public void unsetCreationDate(java.util.Date arg0){
		this.creationDate = null;
	}
	/*
	 * <!-- Start of user code comment for id getter
	 * End of user code -->
	 */
	public long getId(){
		return this.id;
	}
	
	/*
	 * <!-- Start of user code comment for id setter
	 * End of user code -->
	 */
	public void setId(long arg0){
		this.id = arg0;
	}
	/*
	 * <!-- Start of user code comment for name getter
	 * End of user code -->
	 */
	public String getName(){
		return this.name;
	}
	
	/*
	 * <!-- Start of user code comment for name setter
	 * End of user code -->
	 */
	public void setName(String arg0){
		this.name = arg0;
	}
	/*
	 * <!-- Start of user code comment for updateDate getter
	 * End of user code -->
	 */
	public java.util.Date getUpdateDate(){
		return this.updateDate;
	}
	
	/*
	 * <!-- Start of user code comment for updateDate setter
	 * End of user code -->
	 */
	public void setUpdateDate(java.util.Date arg0){
		this.updateDate = arg0;
	}
	
	/*
	 * <!-- Start of user code comment for updateDate unsetter
	 * End of user code -->
	 */
	public void unsetUpdateDate(java.util.Date arg0){
		this.updateDate = null;
	}
	/*
	 * <!-- Start of user code comment for version getter
	 * End of user code -->
	 */
	public int getVersion(){
		return this.version;
	}
	
	/*
	 * <!-- Start of user code comment for version setter
	 * End of user code -->
	 */
	public void setVersion(int arg0){
		this.version = arg0;
	}
	/*
	 * <!-- Start of user code comment for volume getter
	 * End of user code -->
	 */
	public double getVolume(){
		return this.volume;
	}
	
	/*
	 * <!-- Start of user code comment for volume setter
	 * End of user code -->
	 */
	public void setVolume(double arg0){
		this.volume = arg0;
	}
	/*
	 * <!-- Start of user code comment for weight getter
	 * End of user code -->
	 */
	public double getWeight(){
		return this.weight;
	}
	
	/*
	 * <!-- Start of user code comment for weight setter
	 * End of user code -->
	 */
	public void setWeight(double arg0){
		this.weight = arg0;
	}
    

	public Element toXML(){
		Element xmlElement = new Element("BottleType");
		if (uuid != null)
			xmlElement.setAttribute(new Attribute("uuid", uuid));
		if (getName() != null)
			xmlElement.setAttribute(new Attribute("name", getName()));
		xmlElement.setAttribute(new Attribute("weight", String.valueOf(getWeight())));
		xmlElement.setAttribute(new Attribute("volume", String.valueOf(getVolume())));
		xmlElement.setAttribute(new Attribute("id", String.valueOf(getId())));
		if (getCreationDate() != null)
			xmlElement.setAttribute(new Attribute("creationDate", getCreationDate().toString()));
		if (getUpdateDate() != null)
			xmlElement.setAttribute(new Attribute("updateDate", getUpdateDate().toString()));
		xmlElement.setAttribute(new Attribute("version", String.valueOf(getVersion())));
		
		if (!getBottleconfiguration().isEmpty()) {
			Element bottleconfiguration = new Element("bottleconfiguration");
			for (BottleConfigurationBean tmp : getBottleconfiguration())
				bottleconfiguration.addContent(new Element("BottleConfiguration", String.valueOf(tmp.getId())));
			xmlElement.addContent(bottleconfiguration);
		}
		
		return xmlElement;
	}

	//Start of user code for methods
	// Other methods
	//End of user code

}
